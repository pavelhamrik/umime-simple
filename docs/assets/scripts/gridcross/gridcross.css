@media only screen and (min-width: 0) {
  .small-display-none {
    display: none; } }

@media only screen and (min-width: 600px) {
  .medium-display-none {
    display: none; } }

@media only screen and (min-width: 900px) {
  .large-display-none {
    display: none; } }

@media only screen and (min-width: 1200px) {
  .xlarge-display-none {
    display: none; } }

@media only screen and (min-width: 1800px) {
  .xxlarge-display-none {
    display: none; } }

@media only screen and (min-width: 0) {
  .small-display-block {
    display: block; } }

@media only screen and (min-width: 600px) {
  .medium-display-block {
    display: block; } }

@media only screen and (min-width: 900px) {
  .large-display-block {
    display: block; } }

@media only screen and (min-width: 1200px) {
  .xlarge-display-block {
    display: block; } }

@media only screen and (min-width: 1800px) {
  .xxlarge-display-block {
    display: block; } }

@media only screen and (min-width: 0) {
  .small-display-inline {
    display: inline; } }

@media only screen and (min-width: 600px) {
  .medium-display-inline {
    display: inline; } }

@media only screen and (min-width: 900px) {
  .large-display-inline {
    display: inline; } }

@media only screen and (min-width: 1200px) {
  .xlarge-display-inline {
    display: inline; } }

@media only screen and (min-width: 1800px) {
  .xxlarge-display-inline {
    display: inline; } }

@media only screen and (min-width: 0) {
  .small-display-inline-block {
    display: inline-block; } }

@media only screen and (min-width: 600px) {
  .medium-display-inline-block {
    display: inline-block; } }

@media only screen and (min-width: 900px) {
  .large-display-inline-block {
    display: inline-block; } }

@media only screen and (min-width: 1200px) {
  .xlarge-display-inline-block {
    display: inline-block; } }

@media only screen and (min-width: 1800px) {
  .xxlarge-display-inline-block {
    display: inline-block; } }

@media only screen and (min-width: 0) {
  .small-display-flex {
    display: flex; } }

@media only screen and (min-width: 600px) {
  .medium-display-flex {
    display: flex; } }

@media only screen and (min-width: 900px) {
  .large-display-flex {
    display: flex; } }

@media only screen and (min-width: 1200px) {
  .xlarge-display-flex {
    display: flex; } }

@media only screen and (min-width: 1800px) {
  .xxlarge-display-flex {
    display: flex; } }

@media only screen and (min-width: 0) {
  .small-align-left {
    text-align: left;
    justify-content: left; } }

@media only screen and (min-width: 600px) {
  .medium-align-left {
    text-align: left;
    justify-content: left; } }

@media only screen and (min-width: 900px) {
  .large-align-left {
    text-align: left;
    justify-content: left; } }

@media only screen and (min-width: 1200px) {
  .xlarge-align-left {
    text-align: left;
    justify-content: left; } }

@media only screen and (min-width: 1800px) {
  .xxlarge-align-left {
    text-align: left;
    justify-content: left; } }

@media only screen and (min-width: 0) {
  .small-align-right {
    text-align: right;
    justify-content: right; } }

@media only screen and (min-width: 600px) {
  .medium-align-right {
    text-align: right;
    justify-content: right; } }

@media only screen and (min-width: 900px) {
  .large-align-right {
    text-align: right;
    justify-content: right; } }

@media only screen and (min-width: 1200px) {
  .xlarge-align-right {
    text-align: right;
    justify-content: right; } }

@media only screen and (min-width: 1800px) {
  .xxlarge-align-right {
    text-align: right;
    justify-content: right; } }

@media only screen and (min-width: 0) {
  .small-align-center {
    text-align: center;
    justify-content: center; } }

@media only screen and (min-width: 600px) {
  .medium-align-center {
    text-align: center;
    justify-content: center; } }

@media only screen and (min-width: 900px) {
  .large-align-center {
    text-align: center;
    justify-content: center; } }

@media only screen and (min-width: 1200px) {
  .xlarge-align-center {
    text-align: center;
    justify-content: center; } }

@media only screen and (min-width: 1800px) {
  .xxlarge-align-center {
    text-align: center;
    justify-content: center; } }

@font-face {
  font-family: 'umime-to-gridcross';
  src: url("https://umimematiku.cz/files/mrizkovana/umime-to.eot?cgqr3h");
  src: url("https://umimematiku.cz/files/mrizkovana/umime-to.eot?cgqr3h#iefix") format("embedded-opentype"), url("https://umimematiku.cz/files/mrizkovana/umime-to.ttf?cgqr3h") format("truetype"), url("https://umimematiku.cz/files/mrizkovana/umime-to.woff?cgqr3h") format("woff"), url("https://umimematiku.cz/files/mrizkovana/umime-to.svg?cgqr3h#umime-to") format("svg");
  font-weight: normal;
  font-style: normal; }

#gridcross {
  margin: 0 auto;
  padding: 1rem 0;
  font-size: 1rem;
  line-height: 1.5;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-tap-highlight-color: transparent; }
  #gridcross .task-copy {
    text-align: center;
    margin: 0 auto 1.5rem;
    max-width: 320px;
    min-height: 3rem; }
  #gridcross #canvas-wrapper {
    background: url("https://umimematiku.cz/files/mrizkovana/gridcross-background.jpg") blanchedalmond 55% 50%;
    background-size: cover;
    border-radius: 0.4375rem;
    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.015), 0 5px 16px 0 rgba(0, 0, 0, 0.02), 0 2px 7px 0 rgba(0, 0, 0, 0.08);
    box-sizing: content-box;
    margin: 0 auto;
    width: fit-content;
    position: relative; }
  #gridcross #canvas {
    background: rgba(255, 255, 255, 0.65);
    border-radius: inherit;
    box-sizing: border-box;
    display: block; }
    #gridcross #canvas .touchsurface {
      fill: transparent; }
    #gridcross #canvas path,
    #gridcross #canvas line {
      stroke-linecap: round;
      stroke-width: 1;
      stroke: rgba(50, 63, 77, 0.45);
      pointer-events: none; }
      #gridcross #canvas path.taskline,
      #gridcross #canvas line.taskline {
        stroke: #9B59B6;
        stroke-width: 3;
        pointer-events: auto; }
      #gridcross #canvas path.userline, #gridcross #canvas path.selectedline,
      #gridcross #canvas line.userline,
      #gridcross #canvas line.selectedline {
        stroke: #323F4D;
        stroke-width: 3; }
      #gridcross #canvas path.solvedline,
      #gridcross #canvas line.solvedline {
        animation: 0.25s ease-in solved-path forwards; }
      #gridcross #canvas path.flashline,
      #gridcross #canvas line.flashline {
        pointer-events: none;
        animation: 0.35s cubic-bezier(0, 0, 0, 0.7) flash-selected-line forwards; }
        #gridcross #canvas path.flashline.solvedline,
        #gridcross #canvas line.flashline.solvedline {
          animation: 0.55s cubic-bezier(0, 0, 0, 0.7) flash-solved-line forwards; }
    #gridcross #canvas .node {
      fill: transparent;
      transition: fill 0.15s ease-out, stroke 0.15s ease-out; }
      #gridcross #canvas .node.tasknode {
        stroke: #9B59B6;
        fill: #fff;
        stroke-width: 2; }
      #gridcross #canvas .node.usernode, #gridcross #canvas .node.selectednode {
        stroke: #323F4D;
        fill: #fff; }
      #gridcross #canvas .node.selectednode {
        stroke-width: 2.5; }
      #gridcross #canvas .node.usernode.solvednode, #gridcross #canvas .node.tasknode.solvednode, #gridcross #canvas .node.selectednode.solvednode {
        animation: 0.25s ease-in solved-node forwards; }
      #gridcross #canvas .node.flashnode {
        pointer-events: none;
        animation: 0.35s cubic-bezier(0, 0, 0, 0.7) flash-selected-node forwards; }
        #gridcross #canvas .node.flashnode.solvednode {
          animation: 0.55s cubic-bezier(0, 0, 0, 0.7) flash-solved-node forwards; }
    #gridcross #canvas circle.indicator {
      fill: #fff;
      stroke-width: 1;
      stroke: #323F4D;
      transition: fill 0.15s ease-out, stroke 0.15s ease-out; }
      #gridcross #canvas circle.indicator.snapped {
        stroke: #0BB9F3; }
    #gridcross #canvas line.indicator {
      stroke-width: 3;
      stroke: #323F4D;
      transition: fill 0.15s ease-out, stroke 0.15s ease-out; }
      #gridcross #canvas line.indicator.crosshair {
        stroke-width: 1;
        stroke: rgba(50, 63, 77, 0.5); }
        #gridcross #canvas line.indicator.crosshair.snapped {
          stroke: rgba(11, 185, 243, 0.75); }
        @media only screen and (min-width: 900px) {
          #gridcross #canvas line.indicator.crosshair {
            stroke-width: 0; } }
      #gridcross #canvas line.indicator.snapped {
        stroke: #0BB9F3; }
    #gridcross #canvas .label {
      pointer-events: none;
      font-size: 1rem;
      font-weight: 700;
      fill: #9B59B6; }
    #gridcross #canvas .no-pointer-events {
      pointer-events: none !important; }
  #gridcross .button-wrapper {
    margin: 1.5rem auto 0;
    text-align: center; }
  #gridcross .undo-button:before {
    font-family: 'umime-to-gridcross';
    content: "\e908"; }
  #gridcross .undo-button,
  #gridcross .next-button {
    margin: 0 0.75rem;
    background-color: rgba(50, 63, 77, 0.08);
    border: none;
    border-radius: 0.375rem;
    padding: 0.5rem 1rem;
    transition: background-color 0.15s ease-out, color 0.15s ease-out;
    outline: none;
    min-height: 2.75rem;
    font-size: 1rem;
    text-transform: none;
    -webkit-appearance: button; }
    #gridcross .undo-button:disabled,
    #gridcross .next-button:disabled {
      color: rgba(50, 63, 77, 0.45); }
    #gridcross .undo-button:not(:disabled):hover, #gridcross .undo-button:not(:disabled):active,
    #gridcross .next-button:not(:disabled):hover,
    #gridcross .next-button:not(:disabled):active {
      background-color: rgba(50, 63, 77, 0.2);
      cursor: pointer; }
    #gridcross .undo-button.next-button:not(:disabled),
    #gridcross .next-button.next-button:not(:disabled) {
      opacity: 1;
      background-color: #2EB8E6;
      color: #fff; }
      #gridcross .undo-button.next-button:not(:disabled):hover, #gridcross .undo-button.next-button:not(:disabled):active,
      #gridcross .next-button.next-button:not(:disabled):hover,
      #gridcross .next-button.next-button:not(:disabled):active {
        background-color: #19a3d2; }
  #gridcross .loading-indicator {
    border-radius: 0.4375rem;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    display: flex;
    align-items: center;
    justify-content: center; }
    #gridcross .loading-indicator:after {
      content: '';
      background-color: #2EB8E6;
      display: block;
      width: 3rem;
      height: 3rem;
      border-radius: 0.21875rem;
      animation: sk-rotateplane 1.2s infinite ease-in-out; }
  #gridcross #local-io {
    margin: 2.25rem auto 0;
    width: 340px;
    position: relative; }
    #gridcross #local-io #local-io-input {
      width: 340px;
      min-width: 340px;
      max-width: 340px;
      min-height: 2.5rem;
      height: 2.5rem;
      font-family: Consolas, "Liberation Mono", Courier, monospace;
      font-size: 0.875rem;
      box-shadow: none; }
    #gridcross #local-io #local-io-apply-button {
      background: rgba(50, 63, 77, 0.08);
      border-radius: 5rem;
      padding: 0.375rem;
      width: 1.75rem;
      height: 1.75rem;
      position: absolute;
      top: 0.375rem;
      right: 0.375rem;
      outline: none; }
      #gridcross #local-io #local-io-apply-button:before {
        font-family: 'umime-to-gridcross';
        content: "\e902"; }

@keyframes flash-selected-line {
  0% {
    stroke: rgba(11, 185, 243, 0.5); }
  100% {
    stroke: rgba(11, 185, 243, 0);
    stroke-width: 16; } }

@keyframes flash-solved-line {
  0% {
    stroke: rgba(46, 184, 230, 0.5); }
  100% {
    stroke: rgba(46, 184, 230, 0);
    stroke-width: 16; } }

@keyframes flash-selected-node {
  0% {
    stroke: rgba(11, 185, 243, 0.5); }
  100% {
    stroke: rgba(11, 185, 243, 0);
    stroke-width: 24; } }

@keyframes flash-solved-node {
  0% {
    stroke: rgba(46, 184, 230, 0.5); }
  100% {
    stroke: rgba(46, 184, 230, 0);
    stroke-width: 24; } }

@keyframes solved-path {
  0% {
    stroke: #323F4D; }
  100% {
    stroke: #2EB8E6;
    stroke-width: 4; } }

@keyframes solved-node {
  0% {
    stroke: #323F4D; }
  100% {
    stroke: #2EB8E6;
    stroke-width: 2; } }

@keyframes sk-rotateplane {
  0% {
    transform: perspective(120px) rotateX(0deg) rotateY(0deg); }
  50% {
    transform: perspective(120px) rotateX(-180.1deg) rotateY(0deg); }
  100% {
    transform: perspective(120px) rotateX(-180deg) rotateY(-179.9deg); } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
