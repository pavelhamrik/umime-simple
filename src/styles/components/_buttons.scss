@import 'util/util';
@import '../custom-settings';

.button {
    box-shadow: $button-box-shadow;
    border: transparent;

    &.primary {
        font-weight: $global-weight-bold;
    }

    &[disabled] {
        box-shadow: none;
    }

    &.suppressed {
        background: $button-suppressed-background;
        box-shadow: $button-suppressed-box-shadow;
        color: $black;

        @each $designation, $color in $foundation-palette {
            &.#{$designation},
            &.#{$designation}[disabled]:hover {
                color: $color;
            }

            &.#{$designation}:hover {
                background-color: $button-suppressed-background-hover;
            }
        }

        &:hover {
            background: scale-color($button-suppressed-background, $lightness: -7%)
        }

        &[disabled],
        &[disabled]:hover {
            background: opacify($button-suppressed-background, 0.11);
            box-shadow: none;
        }
    }

    &.exercise {
        color: map-get($foundation-palette, secondary);
        font-size: map-get(map-get(map-get($header-styles, small), 'h1'), 'font-size')+px;

        //background: linear-gradient(to bottom, rgba($white, 1) 10%, rgba($white, 0) 90%) 50% 0%,
        //            linear-gradient(to right, adjust-color(map-get($foundation-palette, alert), $hue: -10), map-get($foundation-palette, alert), adjust-color(map-get($foundation-palette, alert), $hue: 10)) left center;

        background: $white;
        box-shadow: $custom-soft-shadow;
        width: 100%;
        margin-bottom: 1.5rem;
        outline: none;
        -webkit-tap-highlight-color: transparent; // we have custom highlights
        transition: all 0.15s ease-out;

        @include breakpoint(medium up) {
            font-size: map-get(map-get(map-get($header-styles, medium), 'h1'), 'font-size')+px;
        }

        &:hover {
            box-shadow: $custom-floating-shadow;

            @include breakpoint(medium up) {
                transform: scale(1.025, 1.075);
            }
        }

        &:active {
            background-color: $custom-active-color;
        }

        &.correct,
        &.incorrect {
            color: $white;
            position: relative;

            @include breakpoint(medium up) {
                transform: scale(1.025, 1.075);
            }
        }

        &.correct {
            animation: 0.65s 1 aura-success;
            background-color: map-get($foundation-palette, success);

        }

        &.incorrect {
            background: map-get($foundation-palette, alert);
            //background: linear-gradient(to right, adjust-color(map-get($foundation-palette, alert), $hue: -10), map-get($foundation-palette, alert), adjust-color(map-get($foundation-palette, alert), $hue: 10));
            animation: 0.65s 1 shake cubic-bezier(0.36,0.07,0.19,0.97) both;
        }
    }
}

table .button:last-child {
    margin-bottom: 0;
}