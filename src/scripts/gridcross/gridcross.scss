@import '../../styles/custom-settings';

body.dragging {
    //overflow: hidden;
}

#gridcross {
    $transition: fill $custom-lightning-speed $custom-default-easing,
    stroke $custom-lightning-speed $custom-default-easing;

    margin: 0 auto;
    padding: 1rem 0;
    //max-width: 100%;

    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    -webkit-tap-highlight-color: transparent;

    .task-copy {
        text-align: center;
        margin: $custom-vertical-padding auto $custom-vertical-padding * 2;
        max-width: 320px;
        min-height: 3rem;
    }

    #canvas-wrapper {
        background: url('../../img/gridcross-background.jpg') blanchedalmond 55% 50%;
        background-size: cover;
        border-radius: $global-radius;
        box-shadow: $custom-soft-shadow, 0 2px 7px 0 rgba(0,0,0,.08);
        box-sizing: content-box;
        margin: 0 auto;
        width: fit-content;
        position: relative;
        //max-width: 100%;
    }

    #canvas {
        background: rgba($white, 0.65);
        border-radius: inherit;
        box-sizing: border-box;
        display: block;

        .touchsurface {
            fill: transparent;
        }

        path,
        line {
            stroke-linecap: round;
            stroke-width: 1;
            stroke: $medium-gray;
            pointer-events: none;

            &.taskline {
                stroke: map-get($custom-apps, 'english');
                stroke-width: 3;
                pointer-events: auto;
            }

            &.userline {
                stroke: $black;
                stroke-width: 3;
            }

            &.solvedline {
                //stroke: map-get($foundation-palette, warning);
                animation: $custom-fast-speed $custom-fadein-easing solved-path forwards;
            }
        }

        .node {
            fill: transparent;
            transition: $transition;


            &.usernode {
                stroke: $black;
                fill: $white;
            }

            &.tasknode {
                stroke: map-get($custom-apps, 'english');
                fill: $white;
                stroke-width: 2;
            }

            &.usernode {
                stroke: $black;
                fill: $white;
            }

            &.usernode.solvednode,
            &.tasknode.solvednode {
                //stroke: map-get($foundation-palette, warning);
                animation: $custom-fast-speed $custom-fadein-easing solved-node forwards;
            }
        }

        circle.indicator {
            fill: $white;
            stroke-width: 1;
            stroke: $black;
            transition: $transition;

            &.snapped {
                stroke: map-get($foundation-palette, secondary);
            }
        }

        line.indicator {
            stroke-width: 3px;
            stroke: $black;
            transition: $transition;

            &.crosshair {
                stroke-width: 0;
                stroke: rgba($black, 0.5);

                &.snapped {
                    stroke: rgba(map-get($foundation-palette, secondary), 0.75);
                }

                @include breakpoint(small only) {
                    stroke-width: 1;
                }
            }

            &.snapped {
                stroke: map-get($foundation-palette, secondary);
            }
        }
    }

    .button-wrapper {
        margin: $custom-vertical-padding * 2 auto 0;
        text-align: center;
    }

    .undo-button:before {
        font-family: 'umime-to';
        content: "\e908";
    }

    .undo-button,
    .next-button {
        margin: 0 0.75rem;
        background-color: $button-suppressed-background;
        border-radius: $button-radius;
        padding: $button-padding;
        transition: $button-transition;
        outline: none;
        min-height: 2.75rem;

        &:disabled {
            color: $medium-gray;
        }

        &:not(:disabled):hover,
        &:not(:disabled):active {
            background-color: $button-suppressed-background-hover;
            cursor: pointer;
        }

        &.next-button:not(:disabled) {
            opacity: 1;
            background-color: map-get($foundation-palette, primary);
            color: $white;

            &:hover,
            &:active {
                background-color: scale-color(map-get($foundation-palette, primary), $lightness: -15%);
            }
        }
    }

    .loading-indicator {
        border-radius: $global-radius;
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        display: flex;
        align-items: center;
        justify-content: center;

        &:after {
            content: '';
            background-color: map-get($foundation-palette, primary);
            display: block;
            width: 3rem;
            height: 3rem;
            border-radius: $global-radius / 2;
            animation: sk-rotateplane 1.2s infinite ease-in-out;
        }
    }

    #local-io {
        margin: $custom-vertical-padding * 3 auto 0;
        width: 340px;
        position: relative;

        #local-io-input {
            width: 340px;
            min-width: 340px;
            max-width: 340px;
            min-height: 2.5rem;
            height: 2.5rem;
            font-family: $font-family-monospace;
            font-size: $small-font-size;
            box-shadow: none;
        }

        #local-io-apply-button {
            background: $light-gray;
            border-radius: $custom-ultimate-radius;
            padding: 0.375rem;
            width: 1.75rem;
            height: 1.75rem;
            position: absolute;
            bottom: 0.375rem;
            right: 0.375rem;
            outline: none;

            &:before {
                font-family: 'umime-to';
                content: "\e902";
            }
        }
    }


    @keyframes solved-path {
        0% {
            stroke: $black;
        }
        100% {
            stroke: map-get($foundation-palette, primary);
            stroke-width: 4;
        }
    }

    @keyframes solved-node {
        0% {
            stroke: $black;
        }
        100% {
            stroke: map-get($foundation-palette, primary);
            stroke-width: 2;
            //fill: scale-color(map-get($foundation-palette, primary), $lightness: 80%);
        }
    }

    // from http://tobiasahlin.com/spinkit/
    @keyframes sk-rotateplane {
        0% {
            transform: perspective(120px) rotateX(0deg) rotateY(0deg);
        }
        50% {
            transform: perspective(120px) rotateX(-180.1deg) rotateY(0deg);
        }
        100% {
            transform: perspective(120px) rotateX(-180deg) rotateY(-179.9deg);
        }
    }
}
